enum Permission {
  ADMIN
  USER 
  BOOKCREATE
  BOOKUPDATE
  BOOKDELETE
  PERMISSIONUPDATE
}



type User {
  id: ID! @unique
  name: String!
  email: String! @unique
  number: String
  walletBalance: Int @default(value:0)
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission]
  cart: [CartProduct!]!
  streetAddress: String
  city: String
  state: String
  postalCode: String



}



type Product {
  id: ID! @unique
  sku: Int
  title: String!
  author: String!
  publisher: Publisher! @relation(name: "ProductPublisher")
  category: ProductCategory! @relation(name: "ProductCategory")
  subject: String!
  type: ProductType! @relation(name: "ProductType")
  edition: Int!
  active: Boolean
  quantity: Int!
  detail: String!
  description: String
  mrp: Float!
  tags: [Tag!]! @relation(name: "ProductTags")
  images: [Image!]! @relation(name: "ProductImages")
  slug: String! @unique

}

type ProductCategory {
  id: ID! @unique
  name: String! @unique
  products: [Product!]! @relation(name: "ProductCategory")
  types: [ProductType!]! @relation(name: "CategoryType")
  image : String
  description : String

}

type ProductType {
  id: ID! @unique
  name: String! @unique
  products: [Product!]! @relation(name: "ProductType")
  category: ProductCategory! @relation(name:"CategoryType")
  publishers: [Publisher!]! @relation(name: "TypePublisher")
}


type Publisher {
  id: ID! @unique
  name: String! @unique
  discount: Int!
  products: [Product!]! @relation(name: "ProductPublisher")
  type: ProductType! @relation(name: "TypePublisher")
}

type Image {
  id: ID! @unique
  src: String!
  product: Product! @relation(name: "ProductImages")
}

type Tag {
  id: ID! @unique
  text: String!
  product: Product! @relation(name: "ProductTags")
}

type CartProduct {
  id: ID! @unique
  quantity: Int! @default(value:1)
  product: Product! #relationship to Product
  user: User! #relationship to User
}

type OrderProduct {
  id: ID! @unique
  title: String!
  author: String!
  publisher: String!
  image: String!
  price: Float
  quantity: Int! @default(value:1)
  user: User
}

type Order {
  id: ID! @unique
  isVookBalanceUsed: Boolean
  addressSetToDefault: Boolean
  couponCode: String
  streetAddress: String
  phone: String
  email: String
  city: String
  state: String
  postalCode: String
  orderId: Int!
  products: [OrderProduct!]!
  subTotal: Float
  total: Float
  status: String!
  user: User!
  orderDateTime: DateTime

}

type PostalCode {
  id: ID! @unique
  code: String! @unique

}


